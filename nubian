#!/bin/sh

set -e

SERVER=https://www.nuget.org/api/v2/package

usage()
{
  echo "Usage: $0 package NUGET_ID [VERSION]" >&2
  echo "       $0 restore"
  echo "  e.g. $0 package NEventStore 5.2.0"
  exit 1
}

package_not_installed()
{
  if [ $(dpkg-query -W -f='${Status}' "$1" 2>/dev/null | grep -c "ok installed") -eq 1 ]; then
    return 1
  fi
  return 0
}

# Script dependecy checks

if package_not_installed devscripts ; then
  echo "Please install devscripts"
  exit 1
fi

if package_not_installed debhelper ; then
  echo "Please install debhelper"
  exit 1
fi

if package_not_installed fakeroot ; then
  echo "Please install fakeroot"
  exit 1
fi

if package_not_installed xmlstarlet ; then
  echo "Please install xmlstarlet"
  exit 1
fi

action=$1
if [ -z "$action" ]; then
  usage
fi
shift

nubian_package()
{
  pkg="$1"
  pkgver="$2"

  if [ -z "$pkg" ]; then
    echo Error: Please specify a NUGET_ID
    usage
  fi

  echo Creating debian package of $pkg $pkgver
  home=`pwd`
  dir=`mktemp -d`
  cd $dir
  echo "* Working dir: $dir"

  if [ -n "$pkgver" ]; then
    pkgurl="$SERVER/$pkg/$pkgver"
    pkgname="$pkg-$version"
  else
    pkgurl="$SERVER/$pkg"
    pkgname="$pkg"
  fi

  echo "* Downloading and extracting $pkgurl ..."
  mkdir pkg
  wget -q -O pkg/${pkgname}.nupkg $pkgurl
  if [ $? -ne 0 ]; then
    echo "\nError downloading $pkgurl" >&2
    exit 1
  fi
  cd pkg
  unzip -q ${pkgname}.nupkg
  if [ $? -ne 0 ]; then
    echo "\nError unzipping `pwd`/${pkgname}.nupkg" >&2
    exit 1
  fi
  cd ..

  eval `xmlstarlet sel -N x="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd" -t \
    -o 'nuget_version="'     -v "/x:package/x:metadata/x:version"     -o '" ' \
    -o 'nuget_url="'         -v "/x:package/x:metadata/x:projectUrl"  -o '" ' \
    -o 'nuget_description="' -v "/x:package/x:metadata/x:description" -o '" ' \
    -o 'nuget_summary="'      -v "/x:package/x:metadata/x:summary"     -o '" ' \
    <pkg/$pkg.nuspec`

  echo "* Nuget version:     $nuget_version"
  echo "* Nuget summary:     $nuget_summary"
  echo "* Nuget description: $nuget_description"
  echo "* Nuget url:         $nuget_url"

  # trying to map the following strucure:
  # packages
  # └── NEventStore.5.2.0
  #     ├── lib
  #     │   └── net40
  #     │       ├── NEventStore.dll
  #     │       ├── NEventStore.pdb
  #     │       └── NEventStore.xml
  #     └── NEventStore.5.2.0.nupkg

  echo "* Copying files ..."
#  mkdir -p opt/mono/$pkg.$nuget_version
#  cp -r pkg/lib opt/mono/$pkg.$nuget_version/
#  cp pkg/${pkgname}.nupkg opt/mono/$pkg.$nuget_version/$pkg.$nuget_version.nupkg
  mkdir -p usr/share/nupkg/
  cp pkg/${pkgname}.nupkg usr/share/nupkg/$pkg.$nuget_version.nupkg

  #echo "* Creating git repo ..."
  #git init . >/dev/null
  #git add .
  #git commit -m "import $SERVER/$pkg" >/dev/null

  debname=nupkg-`echo $pkg | tr A-Z a-z`
  nuget_summary=`echo $nuget_summary | fmt --width=80 | sed 's/^/ /'`
  nuget_description=`echo $nuget_description | fmt --width=80 | sed 's/^/ /'`
  echo "* Creating debian files ..."
  mkdir -p debian/source
  echo "3.0 (git)" > debian/source/format
  echo "9" > debian/compat
  cat >debian/control <<EOF
Source: $debname
Section: devel
Priority: optional
Maintainer: `git config user.name` <`git config user.email`>
Homepage: $nuget_url
Standards-Version: 3.9.6

Package: $debname
Architecture: all
Description: debianized $pkg nuget package
$nuget_summary
$nuget_description
EOF
  cat >debian/changelog <<EOF
$debname ($nuget_version) unstable; urgency=medium

  * debianized by nubian

 -- `git config user.name` <`git config user.email`>  `date -R`
EOF

  cat >debian/rules <<EOF
#!/usr/bin/make -f
%:
	dh \$@
EOF
  chmod +x debian/rules

  cat >debian/install <<EOF
#! /usr/bin/dh-exec
usr
EOF

  #git add debian
  #git commit -m "debianize" >/dev/null

  echo "* Building debian package ..."

  debuild -uc -us -b

  cp ../${debname}_${nuget_version}_all.deb $home/
  echo Package ${debname}_${nuget_version}_all.deb is ready
  cd $home
  rm -rf $dir
}

nubian_restore()
{
  echo Not implemented yet
}

nubian_nuget_localonly()
{
  cat >~/.config/NuGet/NuGet.Config <<EOF
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <add key="https://www.nuget.org/api/v2/" value="https://www.nuget.org/api/v2/" />
    <add key="DebianLocal" value="file:///usr/share/nupkg" />
  </packageSources>
  <disabledPackageSources>
    <add key="https://www.nuget.org/api/v2/" value="true" />
  </disabledPackageSources>
</configuration>
EOF
  rm -rf ~/.local/share/NuGet/Cache/
}

nubian_nuget_nolocal()
{
  rm -f ~/.config/NuGet/NuGet.Config
  rm -rf ~/.local/share/NuGet/Cache/
}

case $action in
  package|nuget-localonly|nuget-nolocal)
    action=`echo $action | tr - _`
    nubian_$action $@
    ;;
  *)
    echo "Unknown action: $action"
    usage
    ;;
esac

