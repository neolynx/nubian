#!/bin/sh

set -e

usage()
{
  echo "Usage: $0 package NUGET_ID [VERSION]" >&2
  echo "  e.g. $0 package NEventStore 5.2.0"
  exit 1
}

action=$1
if [ -z "$action" ]; then
  usage
fi
shift

nubian_package()
{
  pkg="$1"
  pkgver="$2"
  pkgname="$1.$2.nupkg"

  if [ -z "$pkg" ]; then
    echo Error: Please specify a NUGET_ID
    usage
  fi

  if [ -z "$pkgver" ]; then
    echo Error: Please specify a package version
    usage
  fi

  echo Creating debian package of $pkg $pkgver
  home=`pwd`
  dir=`mktemp -d`
  cd $dir
  echo "* Working dir: $dir"

  echo "* Downloading and extracting $pkg $pkgver ..."
  mkdir pkg
  nubian-nuget install $pkg -Version $pkgver -OutputDirectory pkg/
  if [ $? -ne 0 ]; then
    echo "\nError downloading $pkgurl" >&2
    exit 1
  fi

  cd pkg
  unzip "$pkg.$pkgver/$pkgname" "$pkg.nuspec"
  if [ $? -ne 0 ]; then
    echo "\nError unzipping `pwd`/$pkgname" >&2
    exit 1
  fi

  eval `xmlstarlet sel -t \
    -o 'nuget_version="'     -v "/_:package/_:metadata/_:version"     -o '" ' \
    -o 'nuget_url="'         -v "/_:package/_:metadata/_:projectUrl"  -o '" ' \
    -o 'nuget_description="' -v "/_:package/_:metadata/_:description" -o '" ' \
    -o 'nuget_summary="'      -v "/_:package/_:metadata/_:summary"     -o '" ' \
    <$pkg.nuspec`

  echo "* Nuget version:     $nuget_version"
  echo "* Nuget summary:     $nuget_summary"
  echo "* Nuget description: $nuget_description"
  echo "* Nuget url:         $nuget_url"

  echo "* Copying files ..."
  mkdir deb
  cd deb
  mkdir -p opt/mono/lib
  LIBPATHS="net461 Net461 net46 Net46 net452 Net452 net451 Net451 net45 Net45 net40 Net40"

   for libpath in $LIBPATHS
   do
    path="../$pkg.$pkgver/lib/$libpath"
    echo "Looking for assemblies in `pwd`/$path"
    if [ -d "$path" ]; then
      echo "Using assemblies found in $path"
      cp -r $path/* opt/mono/lib
      break
    fi
  done

  mkdir -p usr/share/nupkg/

  cp "../$pkg.$pkgver/$pkgname" usr/share/nupkg/

  #echo "* Creating git repo ..."
  #git init . >/dev/null
  #git add .
  #git commit -m "import $pkgname" >/dev/null

  pkgname=`echo $pkg | tr A-Z a-z`
  debname=nupkg-$pkgname
  nuget_description=`echo $nuget_description\n$nuget_summary | fmt --width=80 | sed 's/^/ /'`
  echo "* Creating debian files ..."
  mkdir -p debian/source
  echo "3.0 (git)" > debian/source/format
  echo "9" > debian/compat
  cat >debian/control <<EOF
Source: nuget-$pkgname
Section: devel
Priority: optional
Maintainer: `git config user.name` <`git config user.email`>
Homepage: $nuget_url
Standards-Version: 3.9.6

Package: $debname
Architecture: all
Description: debianized $pkg nuget package
$nuget_description

Package: libmono-$pkgname
Architecture: all
Description: debianized $pkg nuget DLL
$nuget_description
EOF
  cat >debian/changelog <<EOF
nuget-$pkgname ($nuget_version) unstable; urgency=medium

  * debianized by nubian

 -- `git config user.name` <`git config user.email`>  `date -R`
EOF

  cat >debian/rules <<EOF
#!/usr/bin/make -f
%:
	dh \$@
EOF
  chmod +x debian/rules

  cat >debian/$debname.install <<EOF
#! /usr/bin/dh-exec
usr
EOF

  cat >debian/libmono-$pkgname.install <<EOF
#! /usr/bin/dh-exec
opt
EOF

  #git add debian
  #git commit -m "debianize" >/dev/null

  echo "* Building debian package ..."

  debuild -uc -us -b

  cp ../*.deb $home/
  echo Packages ${debname}_${nuget_version}_all.deb and libmono-${pkgname}_${nuget_version}_all.deb are ready
  cd $home
  rm -rf $dir
}

case $action in
  package)
    action=`echo $action | tr - _`
    nubian_$action $@
    ;;
  *)
    echo "Unknown action: $action"
    usage
    ;;
esac

